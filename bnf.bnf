grammar := productions

productions := production newline productions
productions := production

production := nonterminal space? produces space? tokens?

tokens := token quantifier? space tokens
tokens := token quantifier?

quantifier := [?*+]

token := nonterminal
token := terminal

nonterminal := [a-zA-Z] [^ \t\n\r:"?*+]*

terminal := quoted_string
terminal := character_class

character_class := "[" class_char* "]"

class_char := "\\]"
class_char := [^\]]

quoted_string := singly_quoted_string
quoted_string := doubly_quoted_string

singly_quoted_string := "'" singly_quoted_string_char* "'"

singly_quoted_string_char := "\\\\"
singly_quoted_string_char := "\\" "'"
singly_quoted_string_char := [^']

doubly_quoted_string := '"' doubly_quoted_string_char* '"'

doubly_quoted_string_char := "\\\\"
doubly_quoted_string_char := "\\" '"'
doubly_quoted_string_char := [^"]

produces := ":="

space := space_char+

space_char := " "
space_char := "\t"

newline := space? "\n"+ space?
